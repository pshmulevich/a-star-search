{"version":3,"sources":["assets/a-star_service.png","initialData.js","useLocalStorage.js","dataContext.js","node.js","edge.js","configuration.js","graphWithLabels.js","home.js","dashboard.js","about.js","settings.js","notfound.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","initialScenarioData","from","to","nodes","a","x","y","key","b","c","d","e","f","g","h","i","j","k","l","m","n","o","q","r","edges","toInitialData","scenarioData","Object","values","forEach","node","index","originalNodesMap","originalLinks","initialData","postProcessData","data","linksMap","updatedLinks","map","link","source","target","concat","links","nodeXValues","nodeYValues","graphLeft","Math","min","apply","toConsumableArray","graphRight","max","graphTop","graphBottom","useLocalStorage","initialValue","_useState","useState","item","window","localStorage","getItem","itemValue","JSON","parse","error","console","log","_useState2","slicedToArray","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","DataContext","createContext","DataProvider","_ref","children","activeNodeIndex","setActiveNodeIndex","_useState3","_useState4","dragging","setDragging","_useState5","_useState6","coordinates","setCoordinates","_useState7","_useState8","origin","setOrigin","_useState9","_useState10","nodeOrigin","setNodeOrigin","_useLocalStorage","_useLocalStorage2","bestRoute","setBestRoute","_useLocalStorage3","_useLocalStorage4","setScenarioData","_useLocalStorage5","_useLocalStorage6","graphData","setGraphData","_useLocalStorage7","_useLocalStorage8","zoomFactor","setZoomFactor","react_default","createElement","Provider","Node","props","appData","useContext","nodeSelected","nodeHighlighted","nodeColor","handleMouseDown","preventDefault","touchEvent","changedTouches","length","clientX","clientY","handleMouseUp","style","userSelect","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","fill","dy","dx","fontFamily","toUpperCase","toFixed","Edge","midX","midY","x1","y1","x2","y2","sqrt","pow","strokeWidth","stroke","color","strokeOpacity","textAnchor","MODES","serviceEndpoint","GraphWithLabels","width","height","updateEdges","thickness","edge","edgeKey","sourceKey","targetKey","handleOnMouseMove","xMove","yMove","x0","y0","handleOnMouseLeave","onClick","undefined","serviceUrl","originNode","destinationNode","axios","post","then","response","clear","location","reload","viewBox","preserveAspectRatio","onTouchMove","onMouseMove","onMouseLeave","Graph","className","graph","nodeComponent","linkComponent","Home","_useWindowSize","size","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","id","graphWithLabels","Dashboard","react_router_dom","exact","this","React","Component","About","src","diagram","alt","Settings","history","scenarioDataInput","setScenarioDataInput","setError","onChange","placeholder","jsonObject","dJSON","push","parsingError","toString","Notfound","App","dataContext_DataProvider","dashboard_Dashboard","react_router","path","component","rootElement","document","getElementById","ReactDOM","render","src_App_0"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0LCG3BC,EAAsB,CACjCC,KAAM,IACNC,GAAI,IACJC,MAAO,CACLC,EAAG,CAAEC,EAAG,EAAGC,EAAG,EAAGC,IAAK,KACtBC,EAAG,CAAEH,EAAG,EAAGC,EAAG,GAAKC,IAAK,KACxBE,EAAG,CAAEJ,EAAG,EAAGC,EAAG,EAAGC,IAAK,KACtBG,EAAG,CAAEL,EAAG,IAAKC,EAAG,KAAMC,IAAK,KAC3BI,EAAG,CAAEN,EAAG,EAAGC,EAAG,QAASC,IAAK,KAC5BK,EAAG,CAAEP,EAAG,OAAQC,EAAG,OAAQC,IAAK,KAChCM,EAAG,CAAER,EAAG,KAAOC,EAAG,EAAGC,IAAK,KAC1BO,EAAG,CAAET,EAAG,MAAOC,EAAG,QAASC,IAAK,KAChCQ,EAAG,CAAEV,EAAG,EAAGC,EAAG,GAAKC,IAAK,KACxBS,EAAG,CAAEX,EAAG,IAAKC,EAAG,IAAKC,IAAK,KAC1BU,EAAG,CAAEZ,EAAG,EAAGC,EAAG,EAAGC,IAAK,KACtBW,EAAG,CAAEb,EAAG,IAAKC,EAAG,MAAOC,IAAK,KAC5BY,EAAG,CAAEd,EAAG,MAAOC,EAAG,EAAGC,IAAK,KAC1Ba,EAAG,CAAEf,EAAG,IAAKC,EAAG,IAAKC,IAAK,KAC1Bc,EAAG,CAAEhB,EAAG,IAAKC,EAAG,IAAKC,IAAK,KAC1BR,EAAG,CAAEM,EAAG,IAAKC,EAAG,IAAKC,IAAK,KAC1Be,EAAG,CAAEjB,EAAG,IAAKC,EAAG,IAAKC,IAAK,KAC1BgB,EAAG,CAAElB,EAAG,IAAKC,EAAG,EAAGC,IAAK,MAE1BiB,MAAO,CACL,CAAEvB,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,KACjB,CAAED,KAAM,IAAKC,GAAI,OAeRuB,EAAgB,SAAAC,GAM3B,OALAC,OAAOC,OAAOF,EAAavB,OAAO0B,QAAQ,SAACC,EAAMC,GAC/CD,EAAKzB,EA/DkB,IA+DdyB,EAAKzB,EACdyB,EAAKxB,EAhEkB,IAgEdwB,EAAKxB,EACdwB,EAAKC,MAAQA,IAER,CACL7B,GAAIwB,EAAaxB,GACjBD,KAAMyB,EAAazB,KACnB+B,iBAAkBN,EAAavB,MAC/B8B,cAAeP,EAAaF,QAMjBU,EAFKT,EAAczB,GAMrBmC,EAAkB,SAAAC,GAC7B,IAAMC,EAAW,GACXC,EAAeF,EAAKH,cAAcM,IAAI,SAAAC,GAK1C,OAJAA,EAAKC,OAASL,EAAKJ,iBAAiBQ,EAAKvC,MACzCuC,EAAKE,OAASN,EAAKJ,iBAAiBQ,EAAKtC,IACzCmC,EAAQ,GAAAM,OAAIH,EAAKvC,KAAT,KAAA0C,OAAiBH,EAAKtC,KAAQsC,EACtCH,EAAQ,GAAAM,OAAIH,EAAKtC,GAAT,KAAAyC,OAAeH,EAAKvC,OAAUuC,EAC/BA,IAGTJ,EAAKQ,MAAQN,EACbF,EAAKC,SAAWA,EAGhBD,EAAKjC,MAAQwB,OAAOC,OAAOQ,EAAKJ,kBAEhC,IAAMa,EAAcT,EAAKjC,MAAMoC,IAAI,SAAAT,GACjC,OAAOA,EAAKzB,IAERyC,EAAcV,EAAKjC,MAAMoC,IAAI,SAAAT,GACjC,OAAOA,EAAKxB,IAQd,OALA8B,EAAKW,UAAYC,KAAKC,IAALC,MAAAF,KAAIrB,OAAAwB,EAAA,EAAAxB,CAAQkB,IAAe,IAC5CT,EAAKgB,WAAaJ,KAAKK,IAALH,MAAAF,KAAIrB,OAAAwB,EAAA,EAAAxB,CAAQkB,IAAe,IAC7CT,EAAKkB,SAAWN,KAAKC,IAALC,MAAAF,KAAIrB,OAAAwB,EAAA,EAAAxB,CAAQmB,IAAe,IAC3CV,EAAKmB,YAAcP,KAAKK,IAALH,MAAAF,KAAIrB,OAAAwB,EAAA,EAAAxB,CAAQmB,IAAe,IAEvCV,GCzDMoB,EAzCS,SAACjD,EAAKkD,GAAiB,IAAAC,EAGPC,mBAAS,WAC7C,IAEE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQxD,GAGnCyD,EAAYJ,EAAOK,KAAKC,MAAMN,GAAQH,EAK5C,OADU,gBAARlD,EAAwB4B,EAAgB6B,GAAa,OACtBA,EACjC,MAAOG,GAGP,OADAC,QAAQC,IAAIF,GACLV,KAlBkCa,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAA+B,EAAA,GAGtCc,EAHsCF,EAAA,GAGzBG,EAHyBH,EAAA,GAuC7C,MAAO,CAACE,EAfS,SAAAE,GACf,IAEE,IAAMC,EACJD,aAAiBE,SAAWF,EAAMF,GAAeE,EAEnDD,EAAeE,GAEfd,OAAOC,aAAae,QAAQtE,EAAK0D,KAAKa,UAAUH,IAChD,MAAOR,GAEPC,QAAQC,IAAIF,OCpCLY,EAAcC,0BAGdC,EAAe,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAAezB,EACEC,oBAAU,GADZW,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAA+B,EAAA,GACrC0B,EADqCd,EAAA,GACpBe,EADoBf,EAAA,GAAAgB,EAEZ3B,oBAAS,GAFG4B,EAAA5D,OAAA4C,EAAA,EAAA5C,CAAA2D,EAAA,GAErCE,EAFqCD,EAAA,GAE3BE,EAF2BF,EAAA,GAAAG,EAGN/B,mBAAS,CAAEtD,EAAG,EAAGC,EAAG,IAHdqF,EAAAhE,OAAA4C,EAAA,EAAA5C,CAAA+D,EAAA,GAGrCE,EAHqCD,EAAA,GAGxBE,EAHwBF,EAAA,GAAAG,EAIhBnC,mBAAS,CAAEtD,EAAG,EAAGC,EAAG,IAJJyF,EAAApE,OAAA4C,EAAA,EAAA5C,CAAAmE,EAAA,GAIrCE,EAJqCD,EAAA,GAI7BE,EAJ6BF,EAAA,GAAAG,EAKRvC,mBAAS,CAAEtD,EAAG,EAAGC,EAAG,IALZ6F,EAAAxE,OAAA4C,EAAA,EAAA5C,CAAAuE,EAAA,GAKrCE,EALqCD,EAAA,GAKzBE,EALyBF,EAAA,GAAAG,EAMV9C,EAAgB,YAAa,IANnB+C,EAAA5E,OAAA4C,EAAA,EAAA5C,CAAA2E,EAAA,GAMrCE,EANqCD,EAAA,GAM1BE,EAN0BF,EAAA,GAAAG,EAQJlD,EACtC,eACAxD,GAV0C2G,EAAAhF,OAAA4C,EAAA,EAAA5C,CAAA+E,EAAA,GAQrChF,EARqCiF,EAAA,GAQvBC,EARuBD,EAAA,GAAAE,EAaVrD,EAAgB,cAAetB,GAbrB4E,EAAAnF,OAAA4C,EAAA,EAAA5C,CAAAkF,EAAA,GAarCE,EAbqCD,EAAA,GAa1BE,EAb0BF,EAAA,GAAAG,EAeRzD,EAClC,aF5B6B,GEYa0D,EAAAvF,OAAA4C,EAAA,EAAA5C,CAAAsF,EAAA,GAerCE,EAfqCD,EAAA,GAezBE,EAfyBF,EAAA,GAoB5C,OACEG,EAAAjH,EAAAkH,cAACvC,EAAYwC,SAAb,CACE7C,MAAO,CACLc,WACAC,cACAG,cACAC,iBACAG,SACAC,YACAc,YACAC,eACAtF,eACAkF,kBACAR,aACAC,gBACAjB,kBACAC,qBACAmB,YACAC,eACAU,aACAC,kBAGDjC,YCDQqC,EAnDF,SAAAC,GACX,IAAMC,EAAUC,qBAAW5C,GACnBjD,EAAS2F,EAAT3F,KACF8F,EAAe9F,EAAKC,QAAU2F,EAAQtC,gBACtCyC,EAAkBH,EAAQlC,UAAYoC,EACtCE,EACJhG,EAAKvB,MAAQmH,EAAQX,UAAU9G,KAC3B,QACA6B,EAAKvB,MAAQmH,EAAQX,UAAU7G,GAC/B,MACA2H,EACA,SACA,UAEAE,EAAkB,SAAApH,GACtBA,EAAEqH,iBACF,IACMC,EADiBtH,EAAEuH,gBAAkBvH,EAAEuH,eAAeC,OACxBxH,EAAEuH,eAAe,GAAKvH,EAE1D+G,EAAQzB,UAAU,CAAE5F,EAAG4H,EAAWG,QAAS9H,EAAG2H,EAAWI,UACzDX,EAAQrC,mBAAmBvD,EAAKC,OAEhC2F,EAAQrB,cAAc,CACpBhG,EAAGyB,EAAKzB,EACRC,EAAGwB,EAAKxB,IAEVoH,EAAQjC,aAAY,IAGhB6C,EAAgB,SAAA3H,GACpB+G,EAAQjC,aAAY,GACpBiC,EAAQrC,oBAAoB,IAG9B,OACEgC,EAAAjH,EAAAkH,cAAA,KACEiB,MAAO,CAAEC,WAAY,QACrBC,aAAcV,EACdW,WAAYJ,EACZK,YAAaZ,EACba,UAAWN,GAEXjB,EAAAjH,EAAAkH,cAAA,UAAQ/F,EAAGsG,EAAkB,GAAK,GAAIgB,KAAMf,IAC5CT,EAAAjH,EAAAkH,cAAA,QAAMwB,GAAI,EAAGC,GAAI,GAAIF,KAAK,OAAOG,WAAW,SAA5C,GAAArG,OACMb,EAAKvB,IAAI0I,cADf,MAAAtG,QACkCb,EAAKzB,EHhDlB,KGgDmC6I,QAAQ,GADhE,MAAAvG,QAEIb,EAAKxB,EHjDY,KGkDjB4I,QAAQ,GAHZ,QCDSC,EA3CF,SAAA1B,GAAS,IACZjF,EAASiF,EAATjF,KACR,IAAKA,EAAKC,OAER,OADA2B,QAAQD,MAAM,6BAA8B3B,GACrC,GAET,IAAKA,EAAKE,OAER,OADA0B,QAAQD,MAAM,6BAA8B3B,GACrC,GAET,IAAM4G,GAAQ5G,EAAKC,OAAOpC,EAAImC,EAAKE,OAAOrC,GAAK,EACzCgJ,GAAQ7G,EAAKC,OAAOnC,EAAIkC,EAAKE,OAAOpC,GAAK,EACzCgJ,EAAK9G,EAAKC,OAAOpC,EACjBkJ,EAAK/G,EAAKC,OAAOnC,EACjBkJ,EAAKhH,EAAKE,OAAOrC,EACjBoJ,EAAKjH,EAAKE,OAAOpC,EACjB6H,EAASnF,KAAK0G,KAAK1G,KAAK2G,IAAIH,EAAKF,EAAI,GAAKtG,KAAK2G,IAAIF,EAAKF,EAAI,IAAIL,QACpE,GAEF,OACE7B,EAAAjH,EAAAkH,cAAA,SACED,EAAAjH,EAAAkH,cAAA,QACEgC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJG,YAAapH,EAAKoH,aAAe,EACjCC,OAAQrH,EAAKsH,OAAS,YACtBC,cAAe,KAEjB1C,EAAAjH,EAAAkH,cAAA,QACE0C,WAAW,SACXlB,GAAIO,EAAO,EACXN,GAAIK,EACJP,KAAK,YACLG,WAAW,SALb,KAAArG,QAOSwF,EJxCY,KIwCUe,QAAQ,GAPvC,yBCjCAe,EAGQ,aAUDC,EAPAD,IALJ,QASe,sCAJXA,IAJH,SAOR,yDAE2B,iBCyGdE,EA5GS,SAAAjF,GAAuB,IAApBkF,EAAoBlF,EAApBkF,MACnB1C,GADuCxC,EAAbmF,OAChB1C,qBAAW5C,IACrBgC,EAAYW,EAAQX,UACpB3B,EAAkBsC,EAAQtC,gBAE1BkF,EAAc,SAAC9I,EAAOsI,EAAOS,GACjC/I,EAAMK,QAAQ,SAAA2I,GACZ,IAAMC,EAAO,GAAA9H,OAAM6H,EAAKE,UAAX,KAAA/H,OAAwB6H,EAAKG,WACpCnI,EAAOuE,EAAU1E,SAASoI,GAChCjI,EAAKsH,MAAQA,EACbtH,EAAKoH,YAAcW,KAoCjBK,EAAoB,SAAAjK,GAExB,GADAA,EAAEqH,iBACEN,EAAQlC,SAAU,CACpB,IACMyC,EADiBtH,EAAEuH,gBAAkBvH,EAAEuH,eAAeC,OACxBxH,EAAEuH,eAAe,GAAKvH,EAEpDkK,GACH5C,EAAWG,QAAUV,EAAQ1B,OAAO3F,GAAKqH,EAAQP,WAC9C2D,GACH7C,EAAWI,QAAUX,EAAQ1B,OAAO1F,GAAKoH,EAAQP,WAE9C4D,EAAKrD,EAAQtB,WAAW/F,EACxB2K,EAAKtD,EAAQtB,WAAW9F,EAC9ByG,EAAU5G,MAAMiF,GAAiB/E,EAAI0K,EAAKF,EAC1C9D,EAAU5G,MAAMiF,GAAiB9E,EAAI0K,EAAKF,EAC1CpD,EAAQV,aAAaD,GAErBW,EAAQ7B,eAAe,CACrBxF,EAAGwK,EACHvK,EAAGwK,MAIHG,EAAqB,SAAAtK,GACzBA,EAAEqH,iBACFN,EAAQjC,aAAY,GACpBiC,EAAQrC,oBAAoB,IAIxB8B,EAAaiD,GADArD,EAAU3D,WAAa2D,EAAUhE,WAKpD,OAFA2E,EAAQN,cAAcD,GAGpBE,EAAAjH,EAAAkH,cAAA,WACED,EAAAjH,EAAAkH,cAAA,UAAQ4D,QApES,WAEnBZ,EAAY5C,EAAQlB,eAAW2E,OAAWA,GAC1CzD,EAAQjB,aAAa,IAErB,IAAM2E,EAAalB,EAEbxI,EAAe,CAEnBF,MAAOkG,EAAQX,UAAUnE,MACzBzC,MAAOuH,EAAQX,UAAU5G,MACzBkL,WAAY3D,EAAQX,UAAU9G,KAC9BqL,gBAAiB5D,EAAQX,UAAU7G,IAErCkE,QAAQC,IAAI,kBAAmB+G,EAAY,WAAY1J,GACvD6J,IAAMC,KAAKJ,EAAY1J,GAAc+J,KACnC,SAAAC,GACEtH,QAAQC,IAAI,eAAgBqH,EAAStJ,MAGrCkI,EAAYoB,EAAStJ,KAAKZ,MAAO,MAAO,GACxCkG,EAAQjB,aAAaiF,EAAStJ,KAAKZ,QAErC,SAAA2C,GACEC,QAAQD,MAAMA,OA4ChB,UACAkD,EAAAjH,EAAAkH,cAAA,UAAQ4D,QAzCQ,WAClBpH,aAAa6H,QACb9H,OAAO+H,SAASC,QAAO,KAuCrB,SACAxE,EAAAjH,EAAAkH,cAAA,WACED,EAAAjH,EAAAkH,cAAA,OACEwE,QAAO,GAAAnJ,OAAKoE,EAAUhE,UAAf,KAAAJ,OAA4BoE,EAAUzD,SAAtC,KAAAX,OACLoE,EAAU3D,WADL,KAAAT,OAEHoE,EAAUxD,aACdwI,oBAAoB,iBACpBC,YAAapB,EACbqB,YAAarB,EACbsB,aAAcjB,EACdrC,UAAWqC,EACXvC,WAAYuC,GAEZ5D,EAAAjH,EAAAkH,cAAC6E,EAAA,EAAD,CACEC,UAAU,QACVC,MAAO3E,EAAQX,UACfuF,cAAe9E,EACf+E,cAAepD,QClFZqD,EAvBF,WAAM,IAAAC,EACjB,WAAyB,IAAA/I,EACCC,mBAAS,CAAEtD,EAAG,EAAGC,EAAG,IADrBgE,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAA+B,EAAA,GAChBgJ,EADgBpI,EAAA,GACVqI,EADUrI,EAAA,GAUvB,OARAsI,0BAAgB,WACd,SAASC,IACPF,EAAQ,CAAEtM,EAAGwD,OAAOiJ,WAAYxM,EAAGuD,OAAOkJ,cAI5C,OAFAlJ,OAAOmJ,iBAAiB,SAAUH,GAClCA,IACO,kBAAMhJ,OAAOoJ,oBAAoB,SAAUJ,KACjD,IACIH,EAGQQ,GACX9C,EAfWqC,EAcTpM,EAEFgK,EAhBWoC,EAcNnM,EAEQ,GACnB,OACE+G,EAAAjH,EAAAkH,cAAA,OAAK6F,GAAG,QACN9F,EAAAjH,EAAAkH,cAAC8F,EAAD,CAAiBhD,MAAOA,EAAOC,OAAQA,8CCjBxBgD,0LAEjB,OACEhG,EAAAjH,EAAAkH,cAAA,OAAK6F,GAAG,aACN9F,EAAAjH,EAAAkH,cAAA,OAAK8E,UAAU,QACb/E,EAAAjH,EAAAkH,cAACgG,EAAA,EAAD,CAASC,OAAK,EAACrN,GAAG,KAAlB,QAGAmH,EAAAjH,EAAAkH,cAACgG,EAAA,EAAD,CAASC,OAAK,EAACrN,GAAG,UAAlB,UAIFmH,EAAAjH,EAAAkH,cAAA,OAAK8E,UAAU,WAAWoB,KAAK/F,MAAMtC,kBAZNsI,IAAMC,6BCqC9BC,EAvCD,WACZ,OACEtG,EAAAjH,EAAAkH,cAAA,OAAK6F,GAAG,SACN9F,EAAAjH,EAAAkH,cAAA,OAAK8E,UAAU,YACb/E,EAAAjH,EAAAkH,cAAA,yBACAD,EAAAjH,EAAAkH,cAAA,OAAK8E,UAAU,eACb/E,EAAAjH,EAAAkH,cAAA,2WAQAD,EAAAjH,EAAAkH,cAAA,8VAQAD,EAAAjH,EAAAkH,cAAA,OAAK8E,UAAU,UAAUwB,IAAKC,IAASC,IAAI,aAG7CzG,EAAAjH,EAAAkH,cAAA,qCACAD,EAAAjH,EAAAkH,cAAA,OAAK8E,UAAU,aAAf,icCkBO2B,EAzCE,SAAA7I,GAAiB,IAAd8I,EAAc9I,EAAd8I,QACZtG,EAAUC,qBAAW5C,GADKrB,EAGkBC,mBAChDM,KAAKa,UAAU4C,EAAQhG,aAAc,KAAM,IAJb4C,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAA+B,EAAA,GAGzBuK,EAHyB3J,EAAA,GAGN4J,EAHM5J,EAAA,GAAAgB,EAMN3B,wBAASwH,GANH5F,EAAA5D,OAAA4C,EAAA,EAAA5C,CAAA2D,EAAA,GAMzBnB,EANyBoB,EAAA,GAMlB4I,EANkB5I,EAAA,GAwBhC,OACE8B,EAAAjH,EAAAkH,cAAA,WACED,EAAAjH,EAAAkH,cAAA,uBACAD,EAAAjH,EAAAkH,cAAA,iCACAD,EAAAjH,EAAAkH,cAAA,WACED,EAAAjH,EAAAkH,cAAA,YACE8E,WAAYjI,EAAQ,eAAiB,IAAM,eAC3CO,MAAOuJ,EACPG,SAAU,SAAAzN,GAAC,OAAIuN,EAAqBvN,EAAE+B,OAAOgC,QAC7C2J,YAAa,4BAGjBhH,EAAAjH,EAAAkH,cAAA,UAAQ4D,QA5BU,WACpBiD,OAAShD,GAET,IACE,IAAImD,EAAaC,IAAMrK,MAAM+J,GAC7B7J,QAAQC,IAAI,qCAAsCiK,GAClD5G,EAAQd,gBAAgB0H,GACxB5G,EAAQV,aAAa7E,EAAgBV,EAAc6M,KAEnDN,EAAQQ,KAAK,KACb,MAAOC,GACPrK,QAAQD,MAAM,mBAAoBsK,GAClCN,EAASM,MAgBT,oBACApH,EAAAjH,EAAAkH,cAAA,OAAK8E,UAAU,iBAAiBjI,GAASA,EAAMuK,cCzChCC,mLAEjB,OAAOtH,EAAAjH,EAAAkH,cAAA,+BAF2BmG,IAAMC,WC4B7BkB,EAlBH,WACV,OACEvH,EAAAjH,EAAAkH,cAAA,OAAK6F,GAAG,OACN9F,EAAAjH,EAAAkH,cAACuH,EAAD,KACExH,EAAAjH,EAAAkH,cAACgG,EAAA,EAAD,KACEjG,EAAAjH,EAAAkH,cAACwH,EAAD,KACEzH,EAAAjH,EAAAkH,cAACyH,EAAA,EAAD,KACE1H,EAAAjH,EAAAkH,cAACyH,EAAA,EAAD,CAAOxB,OAAK,EAACyB,KAAK,IAAIC,UAAWzC,IACjCnF,EAAAjH,EAAAkH,cAACyH,EAAA,EAAD,CAAOxB,OAAK,EAACyB,KAAK,YAAYC,UAAWlB,IACzC1G,EAAAjH,EAAAkH,cAACyH,EAAA,EAAD,CAAOxB,OAAK,EAACyB,KAAK,SAASC,UAAWtB,IACtCtG,EAAAjH,EAAAkH,cAACyH,EAAA,EAAD,CAAOE,UAAWN,UClB1BO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOjI,EAAAjH,EAAAkH,cAACiI,EAAD,MAASL","file":"static/js/main.757eebae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/a-star_service.ec4b1ffd.png\";","export const scaleFactor = 200;\r\nexport const initialZoomFactor = 1.0;\r\n\r\nexport const initialScenarioData = {\r\n  from: \"a\",\r\n  to: \"q\",\r\n  nodes: {\r\n    a: { x: 1, y: 1, key: \"a\" },\r\n    b: { x: 2, y: 0.4, key: \"b\" },\r\n    c: { x: 3, y: 1, key: \"c\" },\r\n    d: { x: 1.7, y: 1.95, key: \"d\" },\r\n    e: { x: 2, y: 1.79941, key: \"e\" },\r\n    f: { x: 2.8835, y: 3.9827, key: \"f\" },\r\n    g: { x: 0.998, y: 4, key: \"g\" },\r\n    h: { x: 1.053, y: 5.59554, key: \"h\" },\r\n    i: { x: 4, y: 0.7, key: \"i\" },\r\n    j: { x: 3.4, y: 2.1, key: \"j\" },\r\n    k: { x: 5, y: 1, key: \"k\" },\r\n    l: { x: 3.3, y: 3.104, key: \"l\" },\r\n    m: { x: 4.779, y: 4, key: \"m\" },\r\n    n: { x: 4.5, y: 4.5, key: \"n\" },\r\n    o: { x: 5.7, y: 4.9, key: \"o\" },\r\n    p: { x: 4.7, y: 5.8, key: \"p\" },\r\n    q: { x: 5.9, y: 5.9, key: \"q\" },\r\n    r: { x: 3.7, y: 4, key: \"r\" }\r\n  },\r\n  edges: [\r\n    { from: \"a\", to: \"b\" },\r\n    { from: \"b\", to: \"c\" },\r\n    { from: \"c\", to: \"l\" },\r\n    { from: \"b\", to: \"d\" },\r\n    { from: \"d\", to: \"e\" },\r\n    { from: \"e\", to: \"f\" },\r\n    { from: \"e\", to: \"g\" },\r\n    { from: \"g\", to: \"h\" },\r\n    { from: \"h\", to: \"r\" },\r\n    { from: \"l\", to: \"r\" },\r\n    { from: \"l\", to: \"j\" },\r\n    { from: \"l\", to: \"m\" },\r\n    { from: \"j\", to: \"i\" },\r\n    { from: \"j\", to: \"k\" },\r\n    { from: \"k\", to: \"o\" },\r\n    { from: \"o\", to: \"m\" },\r\n    { from: \"m\", to: \"r\" },\r\n    { from: \"r\", to: \"p\" },\r\n    { from: \"q\", to: \"n\" },\r\n    { from: \"p\", to: \"q\" }\r\n  ]\r\n};\r\n\r\n// Used for debugging and testing\r\nexport const initialScenarioData1 = {\r\n  from: \"a\",\r\n  to: \"q\",\r\n  nodes: {\r\n    a: { x: 1, y: 1, key: \"a\" },\r\n    q: { x: 2.7, y: 2, key: \"q\" }\r\n  },\r\n  edges: [{ from: \"a\", to: \"q\" }]\r\n};\r\n\r\nexport const toInitialData = scenarioData => {\r\n  Object.values(scenarioData.nodes).forEach((node, index) => {\r\n    node.x = node.x * scaleFactor;\r\n    node.y = node.y * scaleFactor;\r\n    node.index = index; // This creates index attribute in the existing node object\r\n  });\r\n  return {\r\n    to: scenarioData.to,\r\n    from: scenarioData.from,\r\n    originalNodesMap: scenarioData.nodes,\r\n    originalLinks: scenarioData.edges\r\n  };\r\n};\r\n\r\nconst initialData = toInitialData(initialScenarioData);\r\n\r\nexport default initialData;\r\n\r\n//postProcessData is data that can be used by what graph requires\r\n// Keeps object references to change data\r\nexport const postProcessData = data => {\r\n  const linksMap = {};\r\n  const updatedLinks = data.originalLinks.map(link => {\r\n    link.source = data.originalNodesMap[link.from];\r\n    link.target = data.originalNodesMap[link.to];\r\n    linksMap[`${link.from},${link.to}`] = link;\r\n    linksMap[`${link.to},${link.from}`] = link;\r\n    return link;\r\n  });\r\n  // We can now use updatedLinks\r\n  data.links = updatedLinks;\r\n  data.linksMap = linksMap;\r\n\r\n  //We can now use indexedNodes\r\n  data.nodes = Object.values(data.originalNodesMap);\r\n\r\n  const nodeXValues = data.nodes.map(node => {\r\n    return node.x;\r\n  });\r\n  const nodeYValues = data.nodes.map(node => {\r\n    return node.y;\r\n  });\r\n\r\n  data.graphLeft = Math.min(...nodeXValues) - 150;\r\n  data.graphRight = Math.max(...nodeXValues) + 200;\r\n  data.graphTop = Math.min(...nodeYValues) - 100;\r\n  data.graphBottom = Math.max(...nodeYValues) + 100;\r\n\r\n  return data;\r\n};\r\n","//Creates a react hook to persist data in local storage.\r\n\r\nimport { useState } from \"react\";\r\nimport { postProcessData } from \"./initialData\";\r\n\r\n//------- See: https://usehooks.com/useLocalStorage/ --------------\r\n/**\r\n * Set-up application state variable to be persisted in local storage\r\n * @param {String} key - local storage key\r\n * @param {*} initialValue - initial value when local storage is not available\r\n */\r\nconst useLocalStorage = (key, initialValue) => {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n\r\n      // Parse stored json or if none return initialValue\r\n      const itemValue = item ? JSON.parse(item) : initialValue;\r\n\r\n      // Optionally post process data\r\n      const postProcessedItemValue =\r\n        key === \"initialData\" ? postProcessData(itemValue) : null;\r\n      return postProcessedItemValue || itemValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = value => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n};\r\nexport default useLocalStorage;\r\n// -----------------------------------------------------------------------\r\n","//dataContext is needed for providing the context and\r\n// provide it for consumption\r\n\r\nimport React, { createContext, useState } from \"react\";\r\nimport initialData, {\r\n  initialZoomFactor,\r\n  initialScenarioData\r\n} from \"./initialData\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nexport const DataContext = createContext();\r\n\r\n// This context provider is passed to any component requiring the context\r\nexport const DataProvider = ({ children }) => {\r\n  const [activeNodeIndex, setActiveNodeIndex] = useState(-1);\r\n  const [dragging, setDragging] = useState(false);\r\n  const [coordinates, setCoordinates] = useState({ x: 0, y: 0 });\r\n  const [origin, setOrigin] = useState({ x: 0, y: 0 });\r\n  const [nodeOrigin, setNodeOrigin] = useState({ x: 0, y: 0 });\r\n  const [bestRoute, setBestRoute] = useLocalStorage(\"bestRoute\", []);\r\n\r\n  const [scenarioData, setScenarioData] = useLocalStorage(\r\n    \"scenarioData\",\r\n    initialScenarioData\r\n  );\r\n  // The high-level information about the scenario\r\n  const [graphData, setGraphData] = useLocalStorage(\"initialData\", initialData);\r\n\r\n  const [zoomFactor, setZoomFactor] = useLocalStorage(\r\n    \"zoomFactor\",\r\n    initialZoomFactor\r\n  );\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        dragging,\r\n        setDragging,\r\n        coordinates,\r\n        setCoordinates,\r\n        origin,\r\n        setOrigin,\r\n        graphData,\r\n        setGraphData,\r\n        scenarioData,\r\n        setScenarioData,\r\n        nodeOrigin,\r\n        setNodeOrigin,\r\n        activeNodeIndex,\r\n        setActiveNodeIndex,\r\n        bestRoute,\r\n        setBestRoute,\r\n        zoomFactor,\r\n        setZoomFactor\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"./dataContext\";\r\nimport { scaleFactor } from \"./initialData\";\r\n\r\nconst Node = props => {\r\n  const appData = useContext(DataContext);\r\n  const { node } = props;\r\n  const nodeSelected = node.index === appData.activeNodeIndex;\r\n  const nodeHighlighted = appData.dragging && nodeSelected;\r\n  const nodeColor =\r\n    node.key === appData.graphData.from\r\n      ? \"green\"\r\n      : node.key === appData.graphData.to\r\n      ? \"red\"\r\n      : nodeHighlighted\r\n      ? \"orange\"\r\n      : \"#21D4FD\";\r\n\r\n  const handleMouseDown = e => {\r\n    e.preventDefault();\r\n    const touchIsEnabled = e.changedTouches && e.changedTouches.length;\r\n    const touchEvent = touchIsEnabled ? e.changedTouches[0] : e;\r\n    // Record our starting point.\r\n    appData.setOrigin({ x: touchEvent.clientX, y: touchEvent.clientY });\r\n    appData.setActiveNodeIndex(node.index);\r\n\r\n    appData.setNodeOrigin({\r\n      x: node.x,\r\n      y: node.y\r\n    });\r\n    appData.setDragging(true);\r\n  };\r\n\r\n  const handleMouseUp = e => {\r\n    appData.setDragging(false);\r\n    appData.setActiveNodeIndex(-1);\r\n  };\r\n\r\n  return (\r\n    <g\r\n      style={{ userSelect: \"none\" }}\r\n      onTouchStart={handleMouseDown}\r\n      onTouchEnd={handleMouseUp}\r\n      onMouseDown={handleMouseDown}\r\n      onMouseUp={handleMouseUp}\r\n    >\r\n      <circle r={nodeHighlighted ? 50 : 25} fill={nodeColor} />\r\n      <text dy={2} dx={28} fill=\"gold\" fontFamily=\"arial\">\r\n        {`${node.key.toUpperCase()} (${(node.x / scaleFactor).toFixed(2)}, ${(\r\n          node.y / scaleFactor\r\n        ).toFixed(2)})`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\nexport default Node;\r\n","import React from \"react\";\r\nimport { scaleFactor } from \"./initialData\";\r\n\r\nconst Edge = props => {\r\n  const { link } = props;\r\n  if (!link.source) {\r\n    console.error(\"Link source does not exist\", link);\r\n    return \"\";\r\n  }\r\n  if (!link.target) {\r\n    console.error(\"Link target does not exist\", link);\r\n    return \"\";\r\n  }\r\n  const midX = (link.source.x + link.target.x) / 2;\r\n  const midY = (link.source.y + link.target.y) / 2;\r\n  const x1 = link.source.x;\r\n  const y1 = link.source.y;\r\n  const x2 = link.target.x;\r\n  const y2 = link.target.y;\r\n  const length = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)).toFixed(\r\n    0\r\n  );\r\n  return (\r\n    <g>\r\n      <line\r\n        x1={x1}\r\n        y1={y1}\r\n        x2={x2}\r\n        y2={y2}\r\n        strokeWidth={link.strokeWidth || 2}\r\n        stroke={link.color || \"lightBlue\"}\r\n        strokeOpacity={0.6}\r\n      />\r\n      <text\r\n        textAnchor=\"middle\"\r\n        dy={midY - 4}\r\n        dx={midX}\r\n        fill=\"steelblue\"\r\n        fontFamily=\"arial\"\r\n      >\r\n        {` (${(length / scaleFactor).toFixed(2)})`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default Edge;\r\n","const MODES = {\r\n  local: \"local\",\r\n  heroku: \"heroku\",\r\n  sameServer: \"sameServer\"\r\n};\r\n\r\nconst mode = MODES.sameServer;\r\n\r\nconst herokuServiceUrl =\r\n  \"https://a-star-search-demo.herokuapp.com/api/findRoute\"; // for production testing\r\nconst localServiceUrl = \"http://localhost:8085/api/findRoute\"; // for Spring Boot work\r\nconst sameServerServiceUrl = \"/api/findRoute\"; // for deploy\r\n\r\nexport const serviceEndpoint =\r\n  mode === MODES.local\r\n    ? localServiceUrl\r\n    : mode === MODES.heroku\r\n    ? herokuServiceUrl\r\n    : sameServerServiceUrl;\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"./dataContext\";\r\nimport { Graph } from \"@vx/network\";\r\nimport Node from \"./node\";\r\nimport Edge from \"./edge\";\r\nimport axios from \"axios\";\r\nimport { serviceEndpoint } from \"./configuration\";\r\n\r\nconst GraphWithLabels = ({ width, height }) => {\r\n  const appData = useContext(DataContext);\r\n  const graphData = appData.graphData;\r\n  const activeNodeIndex = appData.activeNodeIndex;\r\n\r\n  const updateEdges = (edges, color, thickness) => {\r\n    edges.forEach(edge => {\r\n      const edgeKey = `${edge.sourceKey},${edge.targetKey}`;\r\n      const link = graphData.linksMap[edgeKey];\r\n      link.color = color;\r\n      link.strokeWidth = thickness;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    //clear selected edges before computing new best route\r\n    updateEdges(appData.bestRoute, undefined, undefined);\r\n    appData.setBestRoute([]);\r\n\r\n    const serviceUrl = serviceEndpoint;\r\n\r\n    const scenarioData = {\r\n      //request body AKA payload\r\n      edges: appData.graphData.links,\r\n      nodes: appData.graphData.nodes,\r\n      originNode: appData.graphData.from,\r\n      destinationNode: appData.graphData.to\r\n    };\r\n    console.log(\"post request to\", serviceUrl, \"payload:\", scenarioData);\r\n    axios.post(serviceUrl, scenarioData).then(\r\n      response => {\r\n        console.log(\"Route data: \", response.data);\r\n\r\n        //Make selected edges red\r\n        updateEdges(response.data.edges, \"red\", 6);\r\n        appData.setBestRoute(response.data.edges);\r\n      },\r\n      error => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  };\r\n  const handleReset = () => {\r\n    localStorage.clear();\r\n    window.location.reload(false);\r\n  };\r\n  const handleOnMouseMove = e => {\r\n    e.preventDefault();\r\n    if (appData.dragging) {\r\n      const touchIsEnabled = e.changedTouches && e.changedTouches.length;\r\n      const touchEvent = touchIsEnabled ? e.changedTouches[0] : e;\r\n      // Set state for the change in coordinates.\r\n      const xMove =\r\n        (touchEvent.clientX - appData.origin.x) / appData.zoomFactor;\r\n      const yMove =\r\n        (touchEvent.clientY - appData.origin.y) / appData.zoomFactor;\r\n\r\n      const x0 = appData.nodeOrigin.x;\r\n      const y0 = appData.nodeOrigin.y;\r\n      graphData.nodes[activeNodeIndex].x = x0 + xMove;\r\n      graphData.nodes[activeNodeIndex].y = y0 + yMove;\r\n      appData.setGraphData(graphData);\r\n      // tells react to redraw, allows for smooth movement of node\r\n      appData.setCoordinates({\r\n        x: xMove,\r\n        y: yMove\r\n      });\r\n    }\r\n  };\r\n  const handleOnMouseLeave = e => {\r\n    e.preventDefault();\r\n    appData.setDragging(false);\r\n    appData.setActiveNodeIndex(-1);\r\n  };\r\n\r\n  const graphWidth = graphData.graphRight - graphData.graphLeft;\r\n  const zoomFactor = width / graphWidth;\r\n\r\n  appData.setZoomFactor(zoomFactor);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleSubmit}>Submit</button>\r\n      <button onClick={handleReset}>Reset</button>\r\n      <div>\r\n        <svg\r\n          viewBox={`${graphData.graphLeft} ${graphData.graphTop} ${\r\n            graphData.graphRight\r\n          } ${graphData.graphBottom}`}\r\n          preserveAspectRatio=\"xMinYMin slice\"\r\n          onTouchMove={handleOnMouseMove}\r\n          onMouseMove={handleOnMouseMove}\r\n          onMouseLeave={handleOnMouseLeave}\r\n          onMouseUp={handleOnMouseLeave}\r\n          onTouchEnd={handleOnMouseLeave}\r\n        >\r\n          <Graph\r\n            className=\"graph\"\r\n            graph={appData.graphData}\r\n            nodeComponent={Node}\r\n            linkComponent={Edge}\r\n          />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphWithLabels;\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport GraphWithLabels from \"./graphWithLabels\";\r\n\r\nconst Home = () => {\r\n  function useWindowSize() {\r\n    const [size, setSize] = useState({ x: 0, y: 0 });\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize({ x: window.innerWidth, y: window.innerHeight });\r\n      }\r\n      window.addEventListener(\"resize\", updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener(\"resize\", updateSize);\r\n    }, []);\r\n    return size;\r\n  }\r\n\r\n  const { x, y } = useWindowSize();\r\n  const width = x;\r\n  const height = y - 87;\r\n  return (\r\n    <div id=\"home\">\r\n      <GraphWithLabels width={width} height={height} />\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"dashboard\">\r\n        <div className=\"menu\">\r\n          <NavLink exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink exact to=\"/about\">\r\n            About\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"content\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport diagram from \"./assets/a-star_service.png\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div id=\"about\">\r\n      <div className=\"textinfo\">\r\n        <h2>Application</h2>\r\n        <div className=\"application\">\r\n          <p>\r\n            This application allows you to find the shortest path from the Start\r\n            node (marked in green) to the End node (marked in red). When you\r\n            click the \"Submit\" button, the program sends the search scenario to\r\n            the RESTful A-star search engine to find the most cost-effective\r\n            route through all of the nodes and edges and highlights the\r\n            determined path in red.\r\n          </p>\r\n          <p>\r\n            You can click on and drag the nodes in any direction to change their\r\n            positions and test the algorithm's capability. The node you click\r\n            and hold will be enlarged and colored orange until you release it.\r\n            The application will remember the last node positions unless you\r\n            click the \"Reset\" button and the original positions will be\r\n            restored.\r\n          </p>\r\n          <img className=\"diagram\" src={diagram} alt=\"Diagram\" />\r\n        </div>\r\n\r\n        <h2>A-Star Search Algorithm</h2>\r\n        <div className=\"algorithm\">\r\n          The A-Star, or A-*, search is a path-finding algorithm that is known\r\n          for its efficiency. The cost of a path is determined by the sum of the\r\n          distance from the starting node and the estimated remaining distance\r\n          to the destination node. The algorithm builds new routes by looking at\r\n          the neighbor nodes at the end of the best existing routes and uses a\r\n          priority queue to sort routes until it finds the route with the lowest\r\n          cost.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","import React, { useState, useContext } from \"react\";\r\nimport dJSON from \"dirty-json\";\r\n\r\nimport { DataContext } from \"./dataContext\";\r\nimport { toInitialData, postProcessData } from \"./initialData\";\r\n\r\nconst Settings = ({ history }) => {\r\n  const appData = useContext(DataContext);\r\n\r\n  const [scenarioDataInput, setScenarioDataInput] = useState(\r\n    JSON.stringify(appData.scenarioData, null, 2)\r\n  );\r\n  const [error, setError] = useState(undefined);\r\n\r\n  const parseJsonInfo = () => {\r\n    setError(undefined);\r\n    //read in the JSON value\r\n    try {\r\n      var jsonObject = dJSON.parse(scenarioDataInput);\r\n      console.log(\"settings:parseJsonInfo jsonObject:\", jsonObject);\r\n      appData.setScenarioData(jsonObject);\r\n      appData.setGraphData(postProcessData(toInitialData(jsonObject)));\r\n      // Move back to home page\r\n      history.push(\"/\");\r\n    } catch (parsingError) {\r\n      console.error(\"Not a valid JSON\", parsingError);\r\n      setError(parsingError);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Settings:</h1>\r\n      <p>Enter new node data:</p>\r\n      <div>\r\n        <textarea\r\n          className={(error ? \"errorsFound \" : \"\") + \"scenarioData\"}\r\n          value={scenarioDataInput}\r\n          onChange={e => setScenarioDataInput(e.target.value)}\r\n          placeholder={\"Please Enter JSON data\"}\r\n        />\r\n      </div>\r\n      <button onClick={parseJsonInfo}>Submit Node Data</button>\r\n      <div className=\"errorMessage\">{!error || error.toString()}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Settings;\r\n","import React from \"react\";\r\n\r\nexport default class Notfound extends React.Component {\r\n  render() {\r\n    return <h1>not found!</h1>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./home\";\r\nimport Dashboard from \"./dashboard\";\r\nimport About from \"./about\";\r\nimport Settings from \"./settings\";\r\nimport Notfound from \"./notfound\";\r\nimport { DataProvider } from \"./dataContext\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div id=\"app\">\r\n      <DataProvider>\r\n        <BrowserRouter>\r\n          <Dashboard>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/settings\" component={Settings} />\r\n              <Route exact path=\"/about\" component={About} />\r\n              <Route component={Notfound} />\r\n            </Switch>\r\n          </Dashboard>\r\n        </BrowserRouter>\r\n      </DataProvider>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}