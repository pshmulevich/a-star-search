{"version":3,"sources":["initialData.js","useLocalStorage.js","dataContext.js","node.js","edge.js","graphWithLabels.js","configuration.js","home.js","dashboard.js","settings.js","about.js","notfound.js","App.js","index.js"],"names":["initialScenarioData","from","to","nodes","a","x","y","key","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","edges","toInitialData","scenarioData","originalNodesMap","originalLinks","initialData","postProcessData","data","linksMap","updatedLinks","map","link","source","target","concat","links","indexedNodes","Object","values","node","index","useLocalStorage","initialValue","_useState","useState","item","window","localStorage","getItem","itemValue","JSON","parse","error","console","log","_useState2","slicedToArray","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","DataContext","createContext","DataProvider","_ref","children","activeNodeIndex","setActiveNodeIndex","_useState3","_useState4","dragging","setDragging","_useState5","_useState6","coordinates","setCoordinates","_useState7","_useState8","origin","setOrigin","_useState9","_useState10","nodeOrigin","setNodeOrigin","_useLocalStorage","_useLocalStorage2","bestRoute","setBestRoute","_useLocalStorage3","_useLocalStorage4","setScenarioData","_useLocalStorage5","_useLocalStorage6","graphData","setGraphData","_useLocalStorage7","_useLocalStorage8","zoomFactor","setZoomFactor","react_default","createElement","Provider","Node","props","nodeSelected","setNodeSelected","appData","useContext","nodeColor","handleMouseDown","preventDefault","touchEvent","changedTouches","length","clientX","clientY","handleMouseUp","style","userSelect","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","fill","dy","dx","fontFamily","toUpperCase","toFixed","Edge","midX","midY","x1","y1","x2","y2","Math","sqrt","pow","strokeWidth","stroke","color","strokeOpacity","textAnchor","GraphWithLabels","width","height","updateEdges","thickness","forEach","edge","edgeKey","sourceKey","targetKey","handleOnMouseMove","xMove","yMove","x0","y0","nodeXValues","nodeYValues","graphHeight","max","apply","toConsumableArray","min","graphWidth","onClick","undefined","serviceUrl","originNode","destinationNode","axios","post","then","response","clear","location","reload","viewBox","onTouchMove","onMouseMove","onMouseLeave","Graph","graph","nodeComponent","linkComponent","Home","innerWidth","innerHeight","graphWithLabels","Dashboard","id","className","react_router_dom","exact","this","React","Component","Settings","history","scenarioDataInput","setScenarioDataInput","setError","onChange","placeholder","jsonObject","dJSON","push","parsingError","toString","About","Notfound","App","dataContext_DataProvider","dashboard_Dashboard","react_router","path","component","rootElement","document","getElementById","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.316932fb.chunk.js","sourcesContent":["export const scaleFactor = 200;\r\nexport const initialZoomFactor = 1.0;\r\n\r\nexport const initialScenarioData = {\r\n  from: \"a\",\r\n  to: \"q\",\r\n  nodes: {\r\n    a: { x: 1, y: 1, key: \"a\" },\r\n    b: { x: 2, y: 0.4, key: \"b\" },\r\n    c: { x: 3, y: 1, key: \"c\" },\r\n    d: { x: 1.7, y: 1.95, key: \"d\" },\r\n    e: { x: 2, y: 1.79941, key: \"e\" },\r\n    f: { x: 2.8835, y: 3.9827, key: \"f\" },\r\n    g: { x: 0.998, y: 4, key: \"g\" },\r\n    h: { x: 1.053, y: 5.59554, key: \"h\" },\r\n    i: { x: 4, y: 0.7, key: \"i\" },\r\n    j: { x: 3.4, y: 2.1, key: \"j\" },\r\n    k: { x: 5, y: 1, key: \"k\" },\r\n    l: { x: 3.3, y: 3.104, key: \"l\" },\r\n    m: { x: 4.779, y: 4, key: \"m\" },\r\n    n: { x: 4.5, y: 4.5, key: \"n\" },\r\n    o: { x: 5.7, y: 4.9, key: \"o\" },\r\n    p: { x: 4.7, y: 5.8, key: \"p\" },\r\n    q: { x: 5.9, y: 5.9, key: \"q\" },\r\n    r: { x: 3.7, y: 4, key: \"r\" }\r\n  },\r\n  edges: [\r\n    { from: \"a\", to: \"b\" },\r\n    { from: \"b\", to: \"c\" },\r\n    { from: \"c\", to: \"l\" },\r\n    { from: \"b\", to: \"d\" },\r\n    { from: \"d\", to: \"e\" },\r\n    { from: \"e\", to: \"f\" },\r\n    { from: \"e\", to: \"g\" },\r\n    { from: \"g\", to: \"h\" },\r\n    { from: \"h\", to: \"r\" },\r\n    { from: \"l\", to: \"r\" },\r\n    { from: \"l\", to: \"j\" },\r\n    { from: \"l\", to: \"m\" },\r\n    { from: \"j\", to: \"i\" },\r\n    { from: \"j\", to: \"k\" },\r\n    { from: \"k\", to: \"o\" },\r\n    { from: \"o\", to: \"m\" },\r\n    { from: \"m\", to: \"r\" },\r\n    { from: \"r\", to: \"p\" },\r\n    { from: \"q\", to: \"n\" },\r\n    { from: \"p\", to: \"q\" }\r\n  ]\r\n};\r\n\r\nexport const initialScenarioData1 = {\r\n  from: \"a\",\r\n  to: \"q\",\r\n  nodes: {\r\n    a: { x: 1, y: 1, key: \"a\" },\r\n    q: { x: 2.7, y: 2, key: \"q\" }\r\n  },\r\n  edges: [{ from: \"a\", to: \"q\" }]\r\n};\r\n\r\nexport const toInitialData = scenarioData => {\r\n  return {\r\n    to: scenarioData.to,\r\n    from: scenarioData.from,\r\n    originalNodesMap: scenarioData.nodes,\r\n    originalLinks: scenarioData.edges\r\n  };\r\n};\r\n\r\nconst initialData = toInitialData(initialScenarioData);\r\n\r\nexport default initialData;\r\n\r\n//postProcessData is data that can be used by what graph requires\r\n// Keeps object references to change data\r\nexport const postProcessData = data => {\r\n  const linksMap = {};\r\n  const updatedLinks = data.originalLinks.map(link => {\r\n    link.source = data.originalNodesMap[link.from];\r\n    link.target = data.originalNodesMap[link.to];\r\n    linksMap[`${link.from},${link.to}`] = link;\r\n    linksMap[`${link.to},${link.from}`] = link;\r\n    return link;\r\n  });\r\n  // We can now use updatedLinks\r\n  data.links = updatedLinks;\r\n  data.linksMap = linksMap;\r\n\r\n  const nodes = Object.values(data.originalNodesMap);\r\n  const indexedNodes = nodes.map((node, index) => {\r\n    node.x = node.x * scaleFactor;\r\n    node.y = node.y * scaleFactor;\r\n    node.index = index; // This creates index attribute in the existing node object\r\n    return node;\r\n  });\r\n  //We can now use indexedNodes\r\n  data.nodes = indexedNodes;\r\n  return data;\r\n};\r\n","//Creates a react hook to persist data in local storage.\r\n\r\nimport { useState } from \"react\";\r\nimport { postProcessData } from \"./initialData\";\r\n\r\n//-------taken from https://usehooks.com/useLocalStorage/ --------------\r\n/**\r\n * Set-up application state variable to be persisted in local storage\r\n * @param {String} key - local storage key\r\n * @param {*} initialValue - initial value when local storage is not available\r\n */\r\nconst useLocalStorage = (key, initialValue) => {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n\r\n      // Parse stored json or if none return initialValue\r\n      const itemValue = item ? JSON.parse(item) : initialValue;\r\n\r\n      // Optionally post process data\r\n      const postProcessedItemValue =\r\n        key === \"initialData\" ? postProcessData(itemValue) : null;\r\n      return postProcessedItemValue || itemValue;\r\n\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = value => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n};\r\nexport default useLocalStorage;\r\n// -----------------------------------------------------------------------\r\n","//dataContext is needed for providing the context and\r\n// provide it for consumption\r\n\r\nimport React, { createContext, useState } from \"react\";\r\nimport initialData, {\r\n  initialZoomFactor,\r\n  initialScenarioData\r\n} from \"./initialData\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nexport const DataContext = createContext();\r\n\r\n// This context provider is passed to any component requiring the context\r\nexport const DataProvider = ({ children }) => {\r\n  //const [activeNode, setActiveNode] = useState(null);\r\n  const [activeNodeIndex, setActiveNodeIndex] = useState(-1);\r\n  const [dragging, setDragging] = useState(false);\r\n  const [coordinates, setCoordinates] = useState({ x: 0, y: 0 });\r\n  const [origin, setOrigin] = useState({ x: 0, y: 0 });\r\n  const [nodeOrigin, setNodeOrigin] = useState({ x: 0, y: 0 });\r\n  const [bestRoute, setBestRoute] = useLocalStorage(\"bestRoute\", []);\r\n\r\n  const [scenarioData, setScenarioData] = useLocalStorage(\r\n    \"scenarioData\",\r\n    initialScenarioData\r\n  );\r\n  // The high-level information about the scenario\r\n  const [graphData, setGraphData] = useLocalStorage(\"initialData\", initialData);\r\n\r\n  const [zoomFactor, setZoomFactor] = useLocalStorage(\r\n    \"zoomFactor\",\r\n    initialZoomFactor\r\n  );\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        // activeNode,\r\n        // setActiveNode,\r\n        dragging,\r\n        setDragging,\r\n        coordinates,\r\n        setCoordinates,\r\n        origin,\r\n        setOrigin,\r\n        graphData,\r\n        setGraphData,\r\n        scenarioData,\r\n        setScenarioData,\r\n        nodeOrigin,\r\n        setNodeOrigin,\r\n        activeNodeIndex,\r\n        setActiveNodeIndex,\r\n        bestRoute,\r\n        setBestRoute,\r\n        zoomFactor,\r\n        setZoomFactor\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { DataContext } from \"./dataContext\";\r\nimport { scaleFactor } from \"./initialData\";\r\n\r\n// const handleNodeClick = (node, appData) => {\r\n//   //appData.setActiveNode(node);\r\n// };\r\nconst Node = props => {\r\n  const [nodeSelected, setNodeSelected] = useState(false);\r\n  const { node } = props;\r\n  const appData = useContext(DataContext);\r\n  const activeNodeIndex = node.index;\r\n\r\n  // console.log(\r\n  //   \"node.key: \",\r\n  //   node.key,\r\n  //   \" appData.sourceNodeKey: \",\r\n  //   appData.sourceNodeKey,\r\n  //   \" appData.targetNodeKey: \",\r\n  //   appData.targetNodeKey\r\n  // );\r\n  const nodeColor =\r\n    node.key === appData.graphData.from\r\n      ? \"green\"\r\n      : node.key === appData.graphData.to\r\n      ? \"red\"\r\n      : nodeSelected\r\n      ? \"orange\"\r\n      : \"#21D4FD\";\r\n\r\n  const handleMouseDown = e => {\r\n    e.preventDefault();\r\n    setNodeSelected(true);\r\n    const touchIsEnabled = e.changedTouches && e.changedTouches.length;\r\n    const touchEvent = touchIsEnabled ? e.changedTouches[0] : e;\r\n    // Record our starting point.\r\n    appData.setOrigin({ x: touchEvent.clientX, y: touchEvent.clientY });\r\n    appData.setActiveNodeIndex(activeNodeIndex);\r\n\r\n    appData.setNodeOrigin({\r\n      x: node.x,\r\n      y: node.y\r\n    });\r\n    appData.setDragging(true);\r\n  };\r\n\r\n  const handleMouseUp = e => {\r\n    setNodeSelected(false);\r\n    appData.setDragging(false);\r\n    appData.setActiveNodeIndex(-1);\r\n  };\r\n\r\n  return (\r\n    <g\r\n      // onClick={() => handleNodeClick(node, appData)}\r\n      style={{ userSelect: \"none\" }}\r\n      onTouchStart={handleMouseDown}\r\n      onTouchEnd={handleMouseUp}\r\n      onMouseDown={handleMouseDown}\r\n      onMouseUp={handleMouseUp}\r\n    >\r\n      <circle r={nodeSelected ? 30 : 15} fill={nodeColor} />\r\n      <text dy={2} dx={18} fill=\"gold\" fontFamily=\"arial\">\r\n        {`${node.key.toUpperCase()} (${(node.x / scaleFactor).toFixed(2)}, ${(\r\n          node.y / scaleFactor\r\n        ).toFixed(2)})`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\nexport default Node;\r\n","import React from \"react\";\r\nimport { scaleFactor } from \"./initialData\";\r\n\r\nconst Edge = props => {\r\n  const { link } = props;\r\n  if (!link.source) {\r\n    console.error(\"Link source does not exist\", link);\r\n    return \"\";\r\n  }\r\n  if (!link.target) {\r\n    console.error(\"Link target does not exist\", link);\r\n    return \"\";\r\n  }\r\n  const midX = (link.source.x + link.target.x) / 2;\r\n  const midY = (link.source.y + link.target.y) / 2;\r\n  const x1 = link.source.x;\r\n  const y1 = link.source.y;\r\n  const x2 = link.target.x;\r\n  const y2 = link.target.y;\r\n  const length = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)).toFixed(\r\n    0\r\n  );\r\n  //console.log(\"Link-color: \", link.color);\r\n  return (\r\n    <g>\r\n      <line\r\n        x1={x1}\r\n        y1={y1}\r\n        x2={x2}\r\n        y2={y2}\r\n        strokeWidth={link.strokeWidth || 2}\r\n        stroke={link.color || \"lightBlue\"}\r\n        strokeOpacity={0.6}\r\n      />\r\n      <text\r\n        textAnchor=\"middle\"\r\n        dy={midY - 4}\r\n        dx={midX}\r\n        fill=\"steelblue\"\r\n        fontFamily=\"arial\"\r\n      >\r\n        {/* {`${link.label} (${length})`} */}\r\n        {` (${(length / scaleFactor).toFixed(2)})`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default Edge;\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"./dataContext\";\r\nimport { Graph } from \"@vx/network\";\r\nimport Node from \"./node\";\r\nimport Edge from \"./edge\";\r\nimport axios from \"axios\";\r\nimport { serviceEndpoint } from \"./configuration\";\r\n\r\nconst GraphWithLabels = ({ width, height }) => {\r\n  const appData = useContext(DataContext);\r\n  const graphData = appData.graphData;\r\n  const activeNodeIndex = appData.activeNodeIndex;\r\n\r\n  const updateEdges = (edges, color, thickness) => {\r\n    edges.forEach(edge => {\r\n      const edgeKey = `${edge.sourceKey},${edge.targetKey}`;\r\n      const link = graphData.linksMap[edgeKey];\r\n      link.color = color;\r\n      link.strokeWidth = thickness;\r\n      //console.log(\"Edgekey: \", edgeKey, \"color: \", color,  \"link.color: \", link.color);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    //clear selected edges before computing new best route\r\n    updateEdges(appData.bestRoute, undefined, undefined);\r\n    appData.setBestRoute([]);\r\n    //console.log(\"appData.graph data\", appData.graphData);\r\n\r\n    const serviceUrl = serviceEndpoint;\r\n\r\n    const scenarioData = {\r\n      //request body AKA payload\r\n      edges: appData.graphData.links,\r\n      nodes: appData.graphData.nodes,\r\n      originNode: appData.graphData.from,\r\n      destinationNode: appData.graphData.to\r\n    };\r\n    console.log(\"post request to\", serviceUrl, \"payload:\", scenarioData);\r\n    axios.post(serviceUrl, scenarioData).then(\r\n      response => {\r\n        console.log(\"Route data: \", response.data);\r\n\r\n        //Make selected edges red\r\n        updateEdges(response.data.edges, \"red\", 6);\r\n        appData.setBestRoute(response.data.edges);\r\n        //this.props.history.push(\"/otherPage\");\r\n      },\r\n      error => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  };\r\n  const handleReset = () => {\r\n    localStorage.clear();\r\n    window.location.reload(false);\r\n  };\r\n  console.log(\"appData.graphData: \", appData.graphData);\r\n  const handleOnMouseMove = e => {\r\n    e.preventDefault();\r\n    if (appData.dragging) {\r\n      const touchIsEnabled = e.changedTouches && e.changedTouches.length;\r\n      const touchEvent = touchIsEnabled ? e.changedTouches[0] : e;\r\n      // Set state for the change in coordinates.\r\n      const xMove =\r\n        (touchEvent.clientX - appData.origin.x) / appData.zoomFactor;\r\n      const yMove =\r\n        (touchEvent.clientY - appData.origin.y) / appData.zoomFactor;\r\n\r\n      const x0 = appData.nodeOrigin.x;\r\n      const y0 = appData.nodeOrigin.y;\r\n      graphData.nodes[activeNodeIndex].x = x0 + xMove;\r\n      graphData.nodes[activeNodeIndex].y = y0 + yMove;\r\n      appData.setGraphData(graphData);\r\n      // tells react to redraw, allows for smooth movement of node\r\n      appData.setCoordinates({\r\n        x: xMove,\r\n        y: yMove\r\n      });\r\n    }\r\n  };\r\n\r\n  const nodeXValues = appData.graphData.nodes.map(node => {\r\n    return node.x;\r\n  });\r\n  const nodeYValues = appData.graphData.nodes.map(node => {\r\n    return node.y;\r\n  });\r\n  const graphHeight = Math.max(...nodeYValues) - Math.min(...nodeYValues) + 200;\r\n  const graphWidth = Math.max(...nodeXValues) - Math.min(...nodeXValues) + 200;\r\n  const zoomFactor = Math.min(width / graphWidth, height / graphHeight);\r\n  appData.setZoomFactor(zoomFactor);\r\n  //console.log(zoomFactor);\r\n  return (\r\n    <div>\r\n      <button onClick={handleSubmit}>Submit</button>\r\n      <button onClick={handleReset}>Reset</button>\r\n      <div>\r\n        <svg\r\n          width={width}\r\n          height={height}\r\n          viewBox={`0 0 ${width / zoomFactor} ${height / zoomFactor}`}\r\n          // width={width}\r\n          // height={height}\r\n          onTouchMove={handleOnMouseMove}\r\n          onMouseMove={handleOnMouseMove}\r\n          onMouseLeave={e => {\r\n            e.preventDefault();\r\n            appData.setDragging(false);\r\n            appData.setActiveNodeIndex(-1);\r\n          }}\r\n        >\r\n          <rect\r\n            width={width / zoomFactor}\r\n            height={height / zoomFactor}\r\n            fill=\"black\"\r\n          />\r\n          <Graph\r\n            graph={appData.graphData}\r\n            nodeComponent={Node}\r\n            linkComponent={Edge}\r\n          />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphWithLabels;\r\n","const isLocal = true;\r\n\r\nconst herokuServiceUrl =\r\n  \"https://a-star-search-demo.herokuapp.com/api/findRoute\";\r\nconst localServiceUrl = \"http://localhost:8085/api/findRoute\";\r\n\r\nexport const serviceEndpoint = isLocal ? localServiceUrl : herokuServiceUrl;\r\n","import React from \"react\";\r\nimport GraphWithLabels from \"./graphWithLabels\";\r\n\r\nconst Home = () => {\r\n  const width = window.innerWidth - 30;\r\n  const height = window.innerHeight - 50;\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <GraphWithLabels width={width} height={height} />\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"dashboard\">\r\n        <div className=\"menu\">\r\n          <NavLink exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink exact to=\"/settings\">\r\n            Settings\r\n          </NavLink>\r\n          <NavLink exact to=\"/about\">\r\n            About\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"content\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport dJSON from \"dirty-json\";\r\n\r\nimport { DataContext } from \"./dataContext\";\r\nimport { toInitialData, postProcessData } from \"./initialData\";\r\n\r\nconst Settings = ({ history }) => {\r\n  const appData = useContext(DataContext);\r\n\r\n  const [scenarioDataInput, setScenarioDataInput] = useState(\r\n    JSON.stringify(appData.scenarioData, null, 2)\r\n  );\r\n  const [error, setError] = useState(undefined);\r\n\r\n  const parseJsonInfo = () => {\r\n    setError(undefined);\r\n    //read in the JSON value\r\n    try {\r\n      var jsonObject = dJSON.parse(scenarioDataInput);\r\n      console.log(\"settings:parseJsonInfo jsonObject:\", jsonObject);\r\n      appData.setScenarioData(jsonObject);\r\n      appData.setGraphData(postProcessData(toInitialData(jsonObject)));\r\n      // Move back to home page\r\n      history.push(\"/\");\r\n    } catch (parsingError) {\r\n      console.error(\"Not a valid JSON\", parsingError);\r\n      setError(parsingError);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Settings:</h1>\r\n      <p>Enter new node data:</p>\r\n      <div>\r\n        <textarea\r\n          className={(error ? \"errorsFound \" : \"\") + \"scenarioData\"}\r\n          value={scenarioDataInput}\r\n          onChange={e => setScenarioDataInput(e.target.value)}\r\n          placeholder={\"Please Enter JSON data\"}\r\n        />\r\n      </div>\r\n      <button onClick={parseJsonInfo}>Submit Node Data</button>\r\n      <div className=\"errorMessage\">{!error || error.toString()}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Settings;\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"./dataContext\";\r\n\r\nconst About = () => {\r\n  const appData = useContext(DataContext);\r\n  return (\r\n    <div>\r\n      <h1>About</h1>\r\n      <h2>This Application</h2>\r\n      <p>\r\n        This application has nodes which have edges between them depicting\r\n        distances. By clicking the submit button you can find the most efficient\r\n        path to the destination node. The nodes are moveable and the distances\r\n        between the nodes will increase or decrease as you move the selected\r\n        node. This Application was written with a Java Spring-Boot server side\r\n        and a React User interface.\r\n      </p>\r\n\r\n      <h2>A-Star Search Algorithm</h2>\r\n      <p>\r\n        This algorithm is a graph-traversal or path-finding algorithm. It is\r\n        known for its efficiency.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nexport default class Notfound extends React.Component {\r\n  render() {\r\n    return <h1>not found!</h1>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./home\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Settings from \"./settings\";\r\nimport About from \"./about\";\r\nimport Notfound from \"./notfound\";\r\nimport { DataProvider } from \"./dataContext\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div id=\"app\">\r\n      <DataProvider>\r\n        <BrowserRouter>\r\n          <Dashboard>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/settings\" component={Settings} />\r\n              <Route exact path=\"/about\" component={About} />\r\n              <Route component={Notfound} />\r\n            </Switch>\r\n          </Dashboard>\r\n        </BrowserRouter>\r\n      </DataProvider>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}